@using GSI_Internal.Repositry.AssignRequirmentToItemRepo
@using GSI_Internal.Repositry.RequirementsRepo
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using GSI_Internal.Entites
@using GSI_Internal.Repositry.AssignInquireytToItemRepo
@using GSI_Internal.Repositry.AssignSelectionToItem_Repo
@using GSI_Internal.Repositry.RequestSelection_GroupRepo
@using GSI_Internal.Repositry.TransactionItemInquiryRepo
@using GSI_Internal.Repositry.TransiactionItem_Selection_Repo
@using System.Security.Claims
@using GSI_Internal.Repositry.Application_Status_Repo
@using GSI_Internal.Repositry.ApplicationTransaction_RequestRepo
@using GSI_Internal.Repositry.RequestInquiry_AnswerRepo
@using GSI_Internal.Repositry.RequestSelection_SelectedRepo
@using GSI_Internal.Repositry.RequirmentsFileAttachmentRepo
@using GSI_Internal.Repositry.TransactionGroupRepo
@using GSI_Internal.Repositry.TransactionItemRepo
@using GSI_Internal.Repositry.TransactionSupGroupRepo
@model ApplicationTrans_RequestVM
@inject IAssignRequirmentToItemRepo assignRequirmentToItemRepo
@inject IRequirementsRepo requirementsRepo

@inject IAssignInquireytToItemRepo assignInquireytToItemRepo
@inject IRequirmentsFileAttachmentRepo requirmentsFileAttachmentRepo;

@inject IApplicationTransaction_RequestRepo applicationTransactionRequestRepo
@inject ITransactionItemInquiryReop transactionItemInquiryRepo
@inject IRequestSelection_Selectes RequestSelectionSelectes
@inject ITransiactionItem_SelectionRepo TransiactionItemSelectionRepo
@inject IAssignSelectionToItemRepo AssignSelectionToItemRepo
@inject IRequestSelection_GroupRepo _selectionGroupRepo
@inject ITransactionItemRepo TransactionItemRepo
@inject ITransactionGroupRepo TransactionGroupRepo
@inject ITransactionSubGroupRepo TransactionSubGroupRepo
@inject IApplication_StatusRepo ApplicationStatusRepo
@inject IRequestInquiry_AnswerRpo InquiryAnswerRpo
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "SelectFavoirotServives";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";



}

<div class="loading-area">
    <div class="loading-box"></div>
    <div class="loading-pic">
        <div class="windows8">
            <div class="wBall" id="wBall_1">
                <div class="wInnerBall"></div>
            </div>
            <div class="wBall" id="wBall_2">
                <div class="wInnerBall"></div>
            </div>
            <div class="wBall" id="wBall_3">
                <div class="wInnerBall"></div>
            </div>
            <div class="wBall" id="wBall_4">
                <div class="wInnerBall"></div>
            </div>
            <div class="wBall" id="wBall_5">
                <div class="wInnerBall"></div>
            </div>
        </div>
    </div>
</div>
<body>

    <form asp-action="Create" asp-controller="ApplicationTransaction_Request" enctype="multipart/form-data" class="form-horizontal">
        <div class="page-content">

            <div class="container">
               
          
                @foreach (var item in Model.TransactionItemVM)
                {
                    <div class="sf-provi-bio-box cleafix margin-b-50 sf-provi-fullBox">
                        <!--Left-->
                        <div class="sf-provi-bio-left">
                            <div class="sf-provi-bio-info" style="padding-top: 1px; padding-left: 1px; padding-bottom: 1px; padding-right: 1px;">

                                <div><img style="height: 100%; width: 100%; object-fit: fill" src="~/Image/ItemTransPhoto/@item.ServicesPhoto" alt=""></div>



                            </div>
                            <br />
                            <br />
                            <div class="widget rounded-sidebar-widget">
                                <div class="text-left m-b30">
                                    <h3 class="widget-title">Follow Us</h3>
                                </div>
                                <div class="widget_social_inks">
                                    <ul class="social-icons social-square social-darkest social-md">
                                        <li><a href="javascript:void(0);" class="fb-1"><img src="~/Client/images/social-icon/fb-1.png" alt=""></a></li>
                                        <li><a href="javascript:void(0);" class="tw-1"><img src="~/Client/images/social-icon/tw-1.png" alt=""></a></li>
                                        <li><a href="javascript:void(0);" class="pint-1"><img src="~/Client/images/social-icon/pint-1.png" alt=""></a></li>
                                        <li><a href="javascript:void(0);" class="in-1"><img src="~/Client/images/social-icon/in-1.png" alt=""></a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <!--Right-->
                        <div class="sf-provi-bio-right">
                           
                            
                           
                                <h3 class="sf-provi-title">@item.TransactionNameEnglish</h3>
                            <div class="sf-provi-cat"><strong>@item.TransactionGroupNameEnglish /</strong> @item.TransactionSubGroupNameEnglish</div>
                                <div class="sf-provi-bio-text">

                                    <div class="m-b10"><h5>Description</h5></div>
                                    <p>@item.ServicesDecription_English</p>
                                    <div class="m-b10"><h5>Conditions</h5></div>
                                    <div class="m-b10">
                                    <pre style="font-family: 'Mulish', sans-serif; height: auto; max-height: 500px; white-space: pre-wrap;">@if (@item.Services_Conditions_English != null)
                                                                                                                                                {
                                            @item.Services_Conditions_English.Replace("\n", "\r\n")
                                                                                                                                                }</pre>

                                    </div>



                                    <h5>Requirements</h5>
                                    <ul>
                                        @foreach (var items in Model.AssignRequirmentToItemVM)
                                        {
                                            <li>@items.Requirements_English</li>

                                        }
                                    </ul>
                                    <h5>Fees</h5>
                                    <p><i class="fa fa-money"></i> Government Fees :@item.GovernmentFees AED - Services Fees : @item.Price AED </p>
                                    <h5>Services Time:</h5>
                                <p><i class="fa fa-clock-o"></i> @item.Time_Services_English </p>



                                </div>
                            

                          

                        </div>
                        <hr />
                        <input hidden class="form-control sf-form-control" asp-for="TransiactionItem_Code" name="TransiactionItem_Code" type="text">
                        <table class="table">
                            <tbody>
                            <tr>
                                <td>
                                    <div> <label>@Model.RequestSelectionVM.Select(a => a.Selection_GroupName_English).FirstOrDefault()</label></div>

                                </td>
                                <td>
                                  
                                    
                                  
                                </td>
                            </tr>
                            </tbody>
                        </table>
                       
                  


                    </div>
                }

                <partial name="_CreateTransactionFromFavouirt" model="new ApplicationTrans_RequestVM() {

    ID = Model.ID,
    ClientName = Model.ClientName,
    ClientPhone = Model.ClientPhone,
    ServicesPhoto = TransactionItemRepo.GetByID(Model.TransiactionItem_Code).ServicesPhoto,
    TransactionItemVM = TransactionItemRepo.GetAll().Where(c => c.ID == Model.TransiactionItem_Code).Select(
        a => new TransactionItemVM
        {
            Time_Services_Arabic = a.Time_Services_Arabic,
            Time_Services_English = a.Time_Services_English,
            ServicesPhoto = a.ServicesPhoto,
            TransactionGroupName = TransactionGroupRepo.GetAll().Where(g => g.ID == a.TransactionGroupID)
                .Select(m => m.TransactionGroup_NameArabic).FirstOrDefault(),
            TransactionGroupNameEnglish = TransactionGroupRepo.GetAll().Where(g => g.ID == a.TransactionGroupID)
                .Select(m => m.TransactionGroup_NameEnglish).FirstOrDefault(),
            TransactionSubGroupName = TransactionSubGroupRepo.GetAll()
                .Where(x => x.ID == a.TransactionSubGroupID)
                .Select(x => x.SubGroupNameArabic).FirstOrDefault(),
            TransactionSubGroupNameEnglish = TransactionSubGroupRepo.GetAll()
                .Where(x => x.ID == a.TransactionSubGroupID).Select(x => x.SubGroupNameEnglish)
                .FirstOrDefault(),
            Services_Conditions_English = a.Services_Conditions_English,
            Services_Conditions_Arabic = a.Services_Conditions_Arabic,

        }).ToList(),
    UserEmail = Model.UserEmail,
    The_Date = Model.The_Date,
    TransiactionItem_Code = Model.TransiactionItem_Code,
    TransiactionItem_Name = Model.TransiactionItem_Name,
    TransiactionItem_Price = Model.TransiactionItem_Price,
    TransiactionItem_GovernmentFees = Model.TransiactionItem_GovernmentFees,
    TransiactionItem_Net = Model.TransiactionItem_Net,
    ClientNotes = Model.ClientNotes,
    files = Model.files,
    Status = Model.Status,
    StatusName = ApplicationStatusRepo.GetStatusTransfer_Name(Model.Status),
    NumberOfTransiactionOfEntity = Model.NumberOfTransiactionOfEntity,
    AssignRequirmentToItemVM = assignRequirmentToItemRepo.GetAll().Where(r => r.TransactionItemID == Model.TransiactionItem_Code).Select(m => new AssignRequirmentToItemVM
    {
        RequirmentID = m.ID,

        Requirements_NameArabic = requirementsRepo.GetAll().Where(x => x.ID == m.RequirmentID).Select(a => a.RequirementName_Arabic).FirstOrDefault(),
        Requirements_English = requirementsRepo.GetAll().Where(x => x.ID == m.RequirmentID).Select(a => a.RequirementName_English).FirstOrDefault(),

    }).ToList(),



    RequirmentsFileAttachmentVM = requirmentsFileAttachmentRepo.GetAll().Where(r => r.App_Code == Model.ID).Select(c => new RequirmentsFileAttachmentVM()
    {
        RequireID = c.RequireID,
        RequireName_Arabic = requirementsRepo.GetAll().Where(x => x.ID == c.RequireID).Select(a => a.RequirementName_Arabic).FirstOrDefault(),
        RequireName_English = requirementsRepo.GetAll().Where(x => x.ID == c.RequireID).Select(a => a.RequirementName_English).FirstOrDefault(),
        FileName = c.FileName


    }).ToList(),
    RequestInquiry_Answer_VM = InquiryAnswerRpo.GetAll().Where(y => y.App_Code ==  Model.ID).Select(w =>
        new RequestInquiry_Answer_VM()
        {

            InquiryID = w.InquiryID,
            InquiryName_Arabic = transactionItemInquiryRepo.GetAll().Where(s => s.ID == w.InquiryID)
                .Select(c => c.InquiryName_Arabic).FirstOrDefault(),
            InquiryName_English = transactionItemInquiryRepo.GetAll().Where(s => s.ID == w.InquiryID)
                .Select(c => c.InquiryName_English).FirstOrDefault(),
            Inquiry_Type = transactionItemInquiryRepo.GetAll().Where(s => s.ID == w.InquiryID)
                .Select(c => c.Inquiry_Type).FirstOrDefault(),
            Inquiry_Answer = w.Inquiry_Answer
        }).ToList(),
    RequestSelectionVM = RequestSelectionSelectes.GetAll().Where(n => n.App_Code == Model.ID && n.IsSelected == true).Select(
        m => new RequestSelectionVM()
        {

            SelectionID = m.SelectionID,
            SelectionName_Arabic = TransiactionItemSelectionRepo.GetAll().Where(s => s.ID == m.SelectionID)
                .Select(c => c.SelectionName_Arabic).FirstOrDefault(),
            SelectionName_English = TransiactionItemSelectionRepo.GetAll().Where(s => s.ID == m.SelectionID)
                .Select(c => c.SelectionName_English).FirstOrDefault(),
            IsSelected = m.IsSelected

        }).ToList()


}">

                </partial>





                @*    <input type="hidden" id="ApplicationFile" name="ApplicationFile" /> *@

            </div>

        </div>

    </form>

</body>

@section Scripts {

    <script>
        $(function () {

            $('#btnSubmit').click(function () {
                $('.spinner').css('display', 'block');
            });




            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
            $('.FileHistoryName').multiselect(false);
        });
    </script>
  }
    <style>
        .center-div {
            width: 300px;
            height: 300px;
            position: absolute;
            left: 50%;
            top: 50%;
            margin-left: -150px;
            margin-top: -150px;
        }

        .spinner {
            position: fixed;
            z-index: 999;
            height: 100%;
            width: 100%;
            top: 0;
            left: 0;
            background-color: Black;
            filter: alpha(opacity=60);
            opacity: 0.6;
            -moz-opacity: 0.8;
        }

        .loader {
            margin: auto;
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #15a0ec;
            border-bottom: 16px solid #15a0ec;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
        }

        .inner-div {
            background-color: white;
            border-radius: 15px;
            margin: auto;
            padding: 2%;
            width: 150px;
        }

        @@-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
            }
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        input[type="file"]::file-selector-button {
            border: 4px double #cccccc;
            padding: 0.2em 0.4em;
            border-radius: 0.2em;
        @*background-color: #a29bfe;*@ transition: 1s;
            font-size: 10px;
        }

        input[type="file"]::-ms-browse:hover {
            background-color: #bdb76b;
            border: 4px double #cccccc;
        }

        input[type="file"]::-webkit-file-upload-button:hover {
            background-color: #bdb76b;
            border: 4px double #cccccc;
        }

        input[type="file"]::file-selector-button:hover {
            background-color: #bdb76b;
            border: 4px double #cccccc;
        }
    </style>





